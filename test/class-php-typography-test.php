<?php

require_once( __DIR__ . '/../php-typography/class-php-typography.php' );

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-11-08 at 13:00:19.
 */
class PHP_Typography_Test extends PHPUnit_Framework_TestCase
{
    /**
     * @var PHP_Typography
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new PHP_Typography( false );
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * Return encoded HTML string (everything except <>"').
     * 
     * @param string $html
     */
    protected function clean_html( $html ) {
    	return str_replace( array('&lt;', '&gt;'), array('<', '>'), htmlentities( $html, ENT_NOQUOTES, 'utf-8', false ) );    	 
    }
    
    /**
     * @covers PHP_Typography::set_defaults
     * @todo   Implement testSet_defaults().
     */
    public function testSet_defaults()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_tags_to_ignore
     * @todo   Implement testSet_tags_to_ignore().
     */
    public function testSet_tags_to_ignore()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_classes_to_ignore
     * @todo   Implement testSet_classes_to_ignore().
     */
    public function testSet_classes_to_ignore()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_ids_to_ignore
     * @todo   Implement testSet_ids_to_ignore().
     */
    public function testSet_ids_to_ignore()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_smart_quotes
     * @todo   Implement testSet_smart_quotes().
     */
    public function testSet_smart_quotes()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_smart_quotes_primary
     * @todo   Implement testSet_smart_quotes_primary().
     */
    public function testSet_smart_quotes_primary()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_smart_quotes_secondary
     * @todo   Implement testSet_smart_quotes_secondary().
     */
    public function testSet_smart_quotes_secondary()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_smart_dashes
     * @todo   Implement testSet_smart_dashes().
     */
    public function testSet_smart_dashes()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_smart_ellipses
     * @todo   Implement testSet_smart_ellipses().
     */
    public function testSet_smart_ellipses()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_smart_diacritics
     * @todo   Implement testSet_smart_diacritics().
     */
    public function testSet_smart_diacritics()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_diacritic_language
     * @todo   Implement testSet_diacritic_language().
     */
    public function testSet_diacritic_language()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_diacritic_custom_replacements
     * @todo   Implement testSet_diacritic_custom_replacements().
     */
    public function testSet_diacritic_custom_replacements()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_smart_marks
     * @todo   Implement testSet_smart_marks().
     */
    public function testSet_smart_marks()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_smart_math
     * @todo   Implement testSet_smart_math().
     */
    public function testSet_smart_math()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_smart_exponents
     * @todo   Implement testSet_smart_exponents().
     */
    public function testSet_smart_exponents()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_smart_fractions
     * @todo   Implement testSet_smart_fractions().
     */
    public function testSet_smart_fractions()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_smart_ordinal_suffix
     * @todo   Implement testSet_smart_ordinal_suffix().
     */
    public function testSet_smart_ordinal_suffix()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_single_character_word_spacing
     * @todo   Implement testSet_single_character_word_spacing().
     */
    public function testSet_single_character_word_spacing()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_fraction_spacing
     * @todo   Implement testSet_fraction_spacing().
     */
    public function testSet_fraction_spacing()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_unit_spacing
     * @todo   Implement testSet_unit_spacing().
     */
    public function testSet_unit_spacing()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_units
     * @todo   Implement testSet_units().
     */
    public function testSet_units()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_dash_spacing
     * @todo   Implement testSet_dash_spacing().
     */
    public function testSet_dash_spacing()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_space_collapse
     * @todo   Implement testSet_space_collapse().
     */
    public function testSet_space_collapse()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_dewidow
     * @todo   Implement testSet_dewidow().
     */
    public function testSet_dewidow()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_max_dewidow_length
     * @todo   Implement testSet_max_dewidow_length().
     */
    public function testSet_max_dewidow_length()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_max_dewidow_pull
     * @todo   Implement testSet_max_dewidow_pull().
     */
    public function testSet_max_dewidow_pull()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_wrap_hard_hyphens
     * @todo   Implement testSet_wrap_hard_hyphens().
     */
    public function testSet_wrap_hard_hyphens()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_url_wrap
     * @todo   Implement testSet_url_wrap().
     */
    public function testSet_url_wrap()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_email_wrap
     * @todo   Implement testSet_email_wrap().
     */
    public function testSet_email_wrap()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_min_after_url_wrap
     * @todo   Implement testSet_min_after_url_wrap().
     */
    public function testSet_min_after_url_wrap()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_style_ampersands
     * @todo   Implement testSet_style_ampersands().
     */
    public function testSet_style_ampersands()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_style_caps
     * @todo   Implement testSet_style_caps().
     */
    public function testSet_style_caps()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_style_initial_quotes
     * @todo   Implement testSet_style_initial_quotes().
     */
    public function testSet_style_initial_quotes()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_style_numbers
     * @todo   Implement testSet_style_numbers().
     */
    public function testSet_style_numbers()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_initial_quote_tags
     * @todo   Implement testSet_initial_quote_tags().
     */
    public function testSet_initial_quote_tags()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_hyphenation
     * @todo   Implement testSet_hyphenation().
     */
    public function testSet_hyphenation()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_hyphenation_language
     * @todo   Implement testSet_hyphenation_language().
     */
    public function testSet_hyphenation_language()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_min_length_hyphenation
     * @todo   Implement testSet_min_length_hyphenation().
     */
    public function testSet_min_length_hyphenation()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_min_before_hyphenation
     * @todo   Implement testSet_min_before_hyphenation().
     */
    public function testSet_min_before_hyphenation()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_min_after_hyphenation
     * @todo   Implement testSet_min_after_hyphenation().
     */
    public function testSet_min_after_hyphenation()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_hyphenate_headings
     * @todo   Implement testSet_hyphenate_headings().
     */
    public function testSet_hyphenate_headings()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_hyphenate_all_caps
     * @todo   Implement testSet_hyphenate_all_caps().
     */
    public function testSet_hyphenate_all_caps()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_hyphenate_title_case
     * @todo   Implement testSet_hyphenate_title_case().
     */
    public function testSet_hyphenate_title_case()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_hyphenation_exceptions
     * @todo   Implement testSet_hyphenation_exceptions().
     */
    public function testSet_hyphenation_exceptions()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::get_languages
     * @todo   Implement testGet_languages().
     */
    public function testGet_languages()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::get_diacritic_languages
     * @todo   Implement testGet_diacritic_languages().
     */
    public function testGet_diacritic_languages()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::process
     * @todo   Implement testProcess().
     */
    public function testProcess()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::array_intersection
     * @todo   Implement testArray_intersection().
     */
    public function testArray_intersection()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::nodelist_to_array
     * @todo   Implement testNodelist_to_array().
     */
    public function testNodelist_to_array()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::get_ancestors
     * @todo   Implement testGet_ancestors().
     */
    public function testGet_ancestors()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::has_class
     * @todo   Implement testHas_class().
     */
    public function testHas_class()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::process_feed
     * @todo   Implement testProcess_feed().
     */
    public function testProcess_feed()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::get_prev_chr
     * @todo   Implement testGet_prev_chr().
     */
    public function testGet_prev_chr()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::get_previous_textnode
     * @todo   Implement testGet_previous_textnode().
     */
    public function testGet_previous_textnode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::get_last_textnode
     * @todo   Implement testGet_last_textnode().
     */
    public function testGet_last_textnode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::get_next_textnode
     * @todo   Implement testGet_next_textnode().
     */
    public function testGet_next_textnode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::get_first_textnode
     * @todo   Implement testGet_first_textnode().
     */
    public function testGet_first_textnode()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::get_next_chr
     * @todo   Implement testGet_next_chr().
     */
    public function testGet_next_chr()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::get_block_parent
     * @todo   Implement testGet_block_parent().
     */
    public function testGet_block_parent()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::detect_encoding
     * @todo   Implement testDetect_encoding().
     */
    public function testDetect_encoding()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::smart_quotes
     * @todo   Implement testSmart_quotes().
     */
    public function testSmart_quotes()
    {
		//$html = '<p><em>"I\'m pretty sure,"</em> she said, & "He said \'We are <em>family</em>\'".</p>';
		//$expected = '<p><em>&ldquo;';
		
    	$this->object->set_smart_quotes( true );
    	
		$this->assertSame( "<span>&ldquo;Double&rdquo;, &lsquo;single&rsquo;</span>", 
						   $this->clean_html( $this->object->process( '<span>"Double", \'single\'</span>' ) ) );		
    }

    /**
     * @covers PHP_Typography::smart_dashes
     * @todo   Implement testSmart_dashes().
     */
    public function testSmart_dashes()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::smart_ellipses
     * @todo   Implement testSmart_ellipses().
     */
    public function testSmart_ellipses()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::smart_diacritics
     * @todo   Implement testSmart_diacritics().
     */
    public function testSmart_diacritics()
    {
		$this->object->set_smart_diacritics( true );
		$this->object->set_diacritic_language( 'en-US' );
		
		$this->assertSame( $this->clean_html('<p>crème brûlée</p>'), 
						   $this->clean_html( $this->object->process('<p>creme brulee</p>') ) );
    }

    /**
     * @covers PHP_Typography::translate_words
     * @todo   Implement testTranslate_words().
     */
    public function testTranslate_words()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::smart_marks
     * @todo   Implement testSmart_marks().
     */
    public function testSmart_marks()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::smart_math
     * @todo   Implement testSmart_math().
     */
    public function testSmart_math()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::_smart_math_callback
     * @todo   Implement test_smart_math_callback().
     */
    public function test_smart_math_callback()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::smart_exponents
     * @todo   Implement testSmart_exponents().
     */
    public function testSmart_exponents()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::smart_fractions
     * @todo   Implement testSmart_fractions().
     */
    public function testSmart_fractions()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::smart_ordinal_suffix
     * @todo   Implement testSmart_ordinal_suffix().
     */
    public function testSmart_ordinal_suffix()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::single_character_word_spacing
     * @todo   Implement testSingle_character_word_spacing().
     */
    public function testSingle_character_word_spacing()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::dash_spacing
     * @todo   Implement testDash_spacing().
     */
    public function testDash_spacing()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::space_collapse
     * @todo   Implement testSpace_collapse().
     */
    public function testSpace_collapse()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::unit_spacing
     * @todo   Implement testUnit_spacing().
     */
    public function testUnit_spacing()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::wrap_hard_hyphens
     * @todo   Implement testWrap_hard_hyphens().
     */
    public function testWrap_hard_hyphens()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::dewidow
     * @todo   Implement testDewidow().
     */
    public function testDewidow()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::_dewidow_callback
     * @todo   Implement test_dewidow_callback().
     */
    public function test_dewidow_callback()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::wrap_urls
     * @todo   Implement testWrap_urls().
     */
    public function testWrap_urls()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::wrap_emails
     * @todo   Implement testWrap_emails().
     */
    public function testWrap_emails()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::style_caps
     * @todo   Implement testStyle_caps().
     */
    public function testStyle_caps()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::set_inner_html
     * @todo   Implement testSet_inner_html().
     */
    public function testSet_inner_html()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::style_numbers
     * @todo   Implement testStyle_numbers().
     */
    public function testStyle_numbers()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::style_ampersands
     * @todo   Implement testStyle_ampersands().
     */
    public function testStyle_ampersands()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::style_initial_quotes
     * @todo   Implement testStyle_initial_quotes().
     */
    public function testStyle_initial_quotes()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::hyphenation_pattern_injection
     * @todo   Implement testHyphenation_pattern_injection().
     */
    public function testHyphenation_pattern_injection()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::hyphenate
     * @todo   Implement testHyphenate().
     */
    public function testHyphenate()
    {
		$this->object->set_hyphenation( true );
		$this->object->set_hyphenation_language( 'en-US' );
		$this->object->set_min_length_hyphenation(2);
		$this->object->set_min_before_hyphenation(2);
		$this->object->set_min_after_hyphenation(2);
		$this->object->set_hyphenate_headings( true );
		$this->object->set_hyphenate_all_caps( true );
		$this->object->set_hyphenate_title_case( true ); // added in version 1.5
		$this->object->set_hyphenation_exceptions( array( 'KING-desk' ) );
			
 	/*	$this->assertSame( "This is a paragraph with no embedded hyphenation hints and no hyphen-related CSS applied. Corporate gibberish follows. Think visionary. If you generate proactively, you may have to e-enable interactively. We apply the proverb \"Grass doesn't grow on a racetrack\" not only to our re-purposing but our power to matrix. If all of this comes off as dumbfounding to you, that's because it is! Our feature set is unparalleled in the industry, but our reality-based systems and simple use is usually considered a remarkable achievement. The power to brand robustly leads to the aptitude to embrace seamlessly. What do we streamline? Anything and everything, regardless of reconditeness",
 						   $this->clean_html( $this->object->process("This is a paragraph with no embedded hyphenation hints and no hyphen-related CSS applied. Corporate gibberish follows. Think visionary. If you generate proactively, you may have to e-enable interactively. We apply the proverb \"Grass doesn't grow on a racetrack\" not only to our re-purposing but our power to matrix. If all of this comes off as dumbfounding to you, that's because it is! Our feature set is unparalleled in the industry, but our reality-based systems and simple use is usually considered a remarkable achievement. The power to brand robustly leads to the aptitude to embrace seamlessly. What do we streamline? Anything and everything, regardless of reconditeness") ) );
		*/
		
    	$this->assertSame( 'A few words to hy&shy;phen&shy;ate, like KING&shy;desk. Re&shy;ally, there should be more hy&shy;phen&shy;ation here!',
						   $this->clean_html( $this->object->process( 'A few words to hyphenate, like KINGdesk. Really, there should be more hyphenation here!' ) ) );    	 
    }

    /**
     * @covers PHP_Typography::do_hyphenate
     * @todo   Implement testDo_hyphenate().
     */
    public function testDo_hyphenate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::uchr
     * @todo   Implement testUchr().
     */
    public function testUchr()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::is_odd
     * @todo   Implement testIs_odd().
     */
    public function testIs_odd()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers PHP_Typography::mb_str_split
     * @todo   Implement testMb_str_split().
     */
    public function testMb_str_split()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
